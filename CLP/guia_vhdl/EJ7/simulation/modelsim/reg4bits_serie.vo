// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "09/20/2020 15:27:12"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module reg4bits_serie (
	clk_in,
	signal_in,
	signal_out);
input 	clk_in;
input 	[1:0] signal_in;
output 	[1:0] signal_out;

// Design Ports Information
// signal_out[0]	=>  Location: PIN_G3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// signal_out[1]	=>  Location: PIN_G4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// signal_in[0]	=>  Location: PIN_F5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk_in	=>  Location: PIN_J1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// signal_in[1]	=>  Location: PIN_H6,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \signal_out[0]~output_o ;
wire \signal_out[1]~output_o ;
wire \clk_in~input_o ;
wire \clk_in~inputclkctrl_outclk ;
wire \signal_in[0]~input_o ;
wire \signal_out[0]~reg0feeder_combout ;
wire \signal_out[0]~reg0_q ;
wire \signal_in[1]~input_o ;
wire \signal_out[1]~reg0feeder_combout ;
wire \signal_out[1]~reg0_q ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y63_N23
cycloneive_io_obuf \signal_out[0]~output (
	.i(\signal_out[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\signal_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \signal_out[0]~output .bus_hold = "false";
defparam \signal_out[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y63_N16
cycloneive_io_obuf \signal_out[1]~output (
	.i(\signal_out[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\signal_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \signal_out[1]~output .bus_hold = "false";
defparam \signal_out[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N8
cycloneive_io_ibuf \clk_in~input (
	.i(clk_in),
	.ibar(gnd),
	.o(\clk_in~input_o ));
// synopsys translate_off
defparam \clk_in~input .bus_hold = "false";
defparam \clk_in~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk_in~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk_in~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk_in~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk_in~inputclkctrl .clock_type = "global clock";
defparam \clk_in~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y65_N15
cycloneive_io_ibuf \signal_in[0]~input (
	.i(signal_in[0]),
	.ibar(gnd),
	.o(\signal_in[0]~input_o ));
// synopsys translate_off
defparam \signal_in[0]~input .bus_hold = "false";
defparam \signal_in[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y64_N8
cycloneive_lcell_comb \signal_out[0]~reg0feeder (
// Equation(s):
// \signal_out[0]~reg0feeder_combout  = \signal_in[0]~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\signal_in[0]~input_o ),
	.cin(gnd),
	.combout(\signal_out[0]~reg0feeder_combout ),
	.cout());
// synopsys translate_off
defparam \signal_out[0]~reg0feeder .lut_mask = 16'hFF00;
defparam \signal_out[0]~reg0feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y64_N9
dffeas \signal_out[0]~reg0 (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\signal_out[0]~reg0feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\signal_out[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \signal_out[0]~reg0 .is_wysiwyg = "true";
defparam \signal_out[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y64_N1
cycloneive_io_ibuf \signal_in[1]~input (
	.i(signal_in[1]),
	.ibar(gnd),
	.o(\signal_in[1]~input_o ));
// synopsys translate_off
defparam \signal_in[1]~input .bus_hold = "false";
defparam \signal_in[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y64_N26
cycloneive_lcell_comb \signal_out[1]~reg0feeder (
// Equation(s):
// \signal_out[1]~reg0feeder_combout  = \signal_in[1]~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\signal_in[1]~input_o ),
	.cin(gnd),
	.combout(\signal_out[1]~reg0feeder_combout ),
	.cout());
// synopsys translate_off
defparam \signal_out[1]~reg0feeder .lut_mask = 16'hFF00;
defparam \signal_out[1]~reg0feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y64_N27
dffeas \signal_out[1]~reg0 (
	.clk(\clk_in~inputclkctrl_outclk ),
	.d(\signal_out[1]~reg0feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\signal_out[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \signal_out[1]~reg0 .is_wysiwyg = "true";
defparam \signal_out[1]~reg0 .power_up = "low";
// synopsys translate_on

assign signal_out[0] = \signal_out[0]~output_o ;

assign signal_out[1] = \signal_out[1]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
